# ============================
#   Toolchain Build Makefile
#   Author: TurBoTse
# ============================

TOPDIR      := $(CURDIR)
CT_TARGET   := mipsel-linux-musl
CT_PREFIX   := $(TOPDIR)/$(CT_TARGET)
CT_NG       := ./ct-ng

.PHONY: all build clean

all: build

build:
	@echo "\033[1;36m===> üîß Starting toolchain build for:\033[0m \033[1;34m$(CT_TARGET)\033[0m"
	@if [ ! -x $(CT_NG) ]; then \
		echo "\033[1;33m===> ‚è≥ Bootstrapping crosstool-ng...\033[0m"; \
		./bootstrap && ./configure --enable-local && make || { \
			echo "\033[1;31m===> ‚ùå Failed to bootstrap ct-ng.\033[0m"; exit 1; }; \
	fi
	@echo "\033[1;36m===> üì¶ Configuring target: $(CT_TARGET)\033[0m"
	@$(CT_NG) $(CT_TARGET)
	@echo "\033[1;32m===> üöß Building toolchain...\033[0m"
	@$(CT_NG) build
	@echo "\033[1;32m===> ‚úÖ Toolchain build completed at:\033[0m \033[1;34m$(CT_PREFIX)\033[0m"

clean:
	@echo "\033[1;36m===> üßπ Cleaning build artifacts...\033[0m"
	@if [ -x $(CT_NG) ]; then $(CT_NG) distclean; fi
	@if [ -f Makefile ]; then make distclean || true; fi
	@if [ -d "$(CT_PREFIX)" ]; then rm -rf "$(CT_PREFIX)"; fi
	@echo "\033[1;32m===> ‚ôªÔ∏è Clean completed.\033[0m"
